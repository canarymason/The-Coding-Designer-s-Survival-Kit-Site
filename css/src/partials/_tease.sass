/* Non-grid Layout and styling --------------------------------------------------------------

body
  // position: relative
  // width: 100%
  background-color: $brown 
  // background-image: image_url('dirt-6.png'), image_url('dirt-5.png'), image_url('dirt-4.png'), image_url('dirt-3.png'), image_url('dirt-2.png'), image_url('dirt-1.jpg')
  // background-image: image_url('dirt-3.png'), image_url('dirt-2.png'), image_url('dirt-1.jpg')
  background-image: image_url('dirt.jpg')
  
  
#container
  &:before
    content: "≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈≈"
    @extend .logo-type
    letter-spacing: -4px
    +adjust-font-size-to($ms6)
    color: mix($brown, $black)
    color: change-color(mix($brown, $black), $alpha: 0.5)
    color: change-color($red, $alpha: 0.2)
    +text-shadow(rgba($black, 0.6) 1px 1px)
    position: absolute
    top: 50%
    width: 100%
    overflow: hidden
    z-index: 0
  
    
    
header 
  position: relative
  +display-box
  +box-orient(vertical)
  +box-pack(center)
  +box-align(center)
  hgroup
    background: transparent image_url('logo.png') no-repeat 0 ($baseline * 1.5)
    padding-top: $baseline * 1.5
    position: relative
    // margin-left: 101px
    z-index: 5
    +display-box
    +box-orient(vertical)
    +box-pack(center)
    +box-align(end)
    color: $white
    color: change-color($white, $alpha: 0.8)
    +text-shadow(2px 2px 2px rgba($black, 0.8), 5px 8px 8px rgba($black, 0.5))
    #{headers(all)}
      @extend .logo-type
      font-weight: 700
      font-family: $font-proxima-nova-condensed
    h2
      margin-bottom: 0
      position: relative
      font-size: 32.8px
      top: 0px
      .wf-active &
        +adjust-font-size-to($ms5)
        top: -9px
    h1
      font-family: $font-proxima-nova
      font-weight: 800
      +adjust-font-size-to(69px)
      position: relative
      top: 0px
      .wf-active &
        +adjust-font-size-to($ms8)
        top: -$baseline-half
        

      
#container
  // background-color: transparentize($white, 0.2)
  
  
// define animation
@-webkit-keyframes spin
  0%
    +transform2d(rotate(0deg))
  100%
    +transform2d(rotate(360deg))
      
@-webkit-keyframes spin-back
  0%
    +transform2d(rotate(0deg))
  100%
    +transform2d(rotate(-360deg))

$badge-size: 115px
$badge-size-neg-half: -$badge-size * 0.5

#wrapper
  position: relative
  z-index: 3
  width: 1px
  margin: 0 auto
  
  nav.samples
    position: absolute
    z-index: 2
    top: $badge-size-neg-half
    // background-color: $yellow
    // width: 20px
    // height: 20px
    -webkit-animation-name: spin
    -webkit-animation-duration: 80s
    -webkit-animation-timing-function: linear
    -webkit-animation-iteration-count: infinite
    +transform2d(scale(0.9))
    +transition(all,0.5s)            
    ul
      margin: 0 0 0 0
      +no-bullets
      // background-color: $green
      // width: 10px
      // height: 10px
      position: absolute
      $badge-size: 115px
      top: $badge-size-neg-half
      left: $badge-size-neg-half
      li
        -webkit-animation-name: spin-back
        -webkit-animation-duration: 80s
        -webkit-animation-timing-function: linear
        -webkit-animation-iteration-count: infinite
        position: absolute
        top: 0
        left: 0
        width: 115px
        height: 115px
        z-index: 4
        +border-radius($ms9)
        +background-clip(padding-box)
        +transition(all,0.5s)
        +box-shadow(2px 2px 2px rgba($black, 0.8), 5px 8px 8px rgba($black, 0.5))
        $badge-total: 8
        @for $i from 1 through ($badge-total + 1)
          $radius: 320
          $position: 360 / ($badge-total + 1) * $i
          $rotation: $position
          @if $rotation > 180
            $rotation: -360 + $rotation
          @if $rotation == 0
            $rotation: $rotation + 20
          $rotation: $rotation
          $cos: cos($position * (pi() / 180))
          $x-position: $radius * $cos + px
          // @debug $radius * $cos + '%'
          // @debug $radius * $cos + px
          $sin: sin($position * (pi() / 180))
          $y-position: $radius * $sin + px
          &        
            &:nth-of-type(#{$i}n-#{$i})      
              top: $y-position
              left: $x-position
              // &:before
                // content: '\0020'
                // content: '#{$i}'
                // color: $white
                // '\0020'
                // border: 1px solid $white
                // width: ($radius) + px
                // height: 0px 
                // position: absolute
                // left: $x-position
                // top: $y-position
                // @debug $cos
                // $x-origin: -$badge-size * $cos
                // $y-origin: $badge-size * $sin
                // @debug $x-origin
                // @debug $y-origin
                // +transform2d(rotate($rotation) translate($y-position, $x-position))
                // @debug $rotation + 180 + deg
                // +transform2d(rotate($rotation + 180 + deg) translate($x-origin, $y-origin))
                // +transform2d( translate($x-origin, $y-origin))
                // +transform-origin(0, 0)
        a
          +transition(all,0.5s)
          +remove-link-underlines
          display: block
          +replace-text-with-dimensions('badge-color.png')
          &:hover
            +transform2d(rotate(0) scale(1.2))
        @each $badge in color, clean-start, step-by-step, html5, fonts, sass-mixins, ui-patterns, drupal-ui-patterns, code-viewer
          &##{$badge}-badge
            a
              // +replace-text-with-dimensions('badge-#{$badge}.png')
              background-image: image_url('badge-#{$badge}.png')
    &:hover
      ul
        li
          $badge-total: 8
          @for $i from 1 through ($badge-total + 1)
            $radius: 345
            $position: 360 / ($badge-total + 1) * $i
            $rotation: $position
            @if $rotation > 180
              $rotation: -360 + $rotation
            @if $rotation == 0
              $rotation: $rotation + 20
            $rotation: $rotation
            $cos: cos($position * (pi() / 180))
            $x-position: $radius * $cos + px
            $sin: sin($position * (pi() / 180))
            $y-position: $radius * $sin + px
            &        
              &:nth-of-type(#{$i}n-#{$i})      
                top: $y-position
                left: $x-position


#main
  // .content
  // @extend .hidden  
  position: relative
  // +display-box
  //   +box-orient(vertical)
  //   +box-pack(center)
  //   +box-align(center)
  //   width: 100%
  width: 404px
  margin: 0 auto
  article
    position: absolute
    // border: 1px solid $white
    height: 190px
    // width: 404px
    // margin: 0 auto
    width: 350px
    +border-bottom-radius(180px)
    background-color: $black
    background-color: change-color($black, $alpha:  0.5)
    color: $lightgray
    text-align: center
    left: 0px
    overflow: hidden
    padding: 0 30px
    // top: 0
    // width: 300px
    // +display-box
    // margin: 0 auto
    h1
      @extend h3
      border-bottom: 1px dashed $white
      margin-bottom: 0.25em
      color: adjust-color($blue, $lightness: +30)
    p
      // +adjust-font-size-to($ms0)
    @extend .hidden
    // &:first-child
    //   display: block
    //   visibility: visible
    &:target
      display: block
      visibility: visible
  // ar
  > footer  
    @extend .hidden
    